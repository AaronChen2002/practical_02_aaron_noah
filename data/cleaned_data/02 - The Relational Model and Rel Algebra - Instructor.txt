CS 3200 The Relational Model of Data Mark Fontenot, PhD Northeastern University These notes are based upon and adapted via the generosity of Prof. Nate Derbinsky.Reminders - Make sure you can see the course on Gradescope, Campuswire, and Slack - Mini HW00 - Early EC Deadline: Sunday @ 11:59 pm - Regular Deadline: Tuesday @ 11:59 pm 2Applications and Data ● Many applications are data intensive compared to compute intensive. ● Many apps need to… ○ store data for itself or another app to use in the future (databases) ○ remember the results of prior expensive operations (caches) ○ allow users to search for data efficiently (indexes) ○ send messages with data to another application to handle (stream processing) ○ periodically process a large accumulation of data (batch processing) From Kleppmann, Designing Data Intensive Applications, O’Reilly, 2017. 3Stores of data? 4What is a database? ● Structured collection of related data ○ usually related to something in the real world ○ usually created… ■ for a specific group of users ■ to help these users perform some kind of tasks ■ to hopefully complete those tasks with some performance, redundancy, concurrency, and/or security considerations in mind 5Notion ● Intended users? ● Intended tasks? ● Considerations of ○ Performance? ○ Concurrency? ○ Redundancy? ○ Security? 6Database Management Systems (DBMS) ● Software that allow the creation and maintenance of databases ○ Support the encoding of some type of structure for the data ○ Persists the data ○ Support adding new data and updating existing data ○ Protects against failures and unauthorized access 7Some Categories of DBMSs Document-Oriented Databases Graph Databases - Organizes and queries data based on - Organizes data by nodes, edges, the concept of a “document” often in labels JSON - Query about paths between nodes - usually considered semi-structured and node relationships 8Some Categories of DBMSs Key-Value Databases Spatial Databases - Everything is a key/value pair - Stores data related to 2D/3D - Based on associative array locations - Query example: are 2 cars about to collide? 9Some Categories of DBMSs Vector Databases - unit of storage is a vector represent high-dimensional data - highly performant similarity searches - used extensively in LLMs 10The category for this course… ● Relational Database Management Systems ○ Based on storing data in tables and connections between those tables ○ Original concept developed in early 70s by EF Codd and colleagues 11Relational Model of Data: Overview 12The Relational Database: Relation/Table Relation - the core construct in a relational database; collection of tuples Relation/Table Name Attributes/Columns with each tuple having values for a fixed number of attributes/fields. Relation Schema - represents the Students attributes and their data types for a ID Name Phone Dorm Age GPA particular relation 1123141 Mark 555-1234 1 19 3.21 Rows/ 2323411 Kim 555-9876 2 25 3.53 Relation Instance - represents the state Tuples of the data in the relation at a particular 17642352 Sam 555-6758 1 19 3.25 point in time. Row/Tuple - values for each relation’s Primary Key attribute for one element of a relation instance Image borrowed from this Medium post. 13The Relational Database: Constraints Student Constraint - conditions that must hold on all valid relation ID Name Phone Dorm Age GPA instances 1123141 Mark 555-1234 1 19 3.21 2323411 Kim 555-9876 2 25 3.53 Types: 17642352 Sam 555-6758 1 19 3.25 - Key Constraints - Entity Integrity Constraints Must be a valid - Referential Integrity Example cannot be dorm id in the Constraints: null constraints dorm relation Image borrowed from this Medium post. 14The Relational Database: Relationships Student Some values in one table Name ID Phone Dorm Age GPA are related (by design) to Mark 1123141 555-1234 1 19 3.21 values in another table Kim 2323411 555-9876 2 25 3.53 Sam 17642352 555-6758 1 19 3.25 Class ID Class Dorm Dorm Name 1123141 COMP355 Referential Integrity 1 555 Huntington Constraint Examples 2323411 COMP355 17642352 MATH650 2 Baker 1123141 MATH650 2323411 BIOL110 15The Relational Database: Queries Questions (Queries): Student Name ID Phone Dorm Age GPA “Provide a list of Mark 1123141 555-1234 1 19 3.21 student names and Kim 2323411 555-9876 2 25 3.53 IDs with GPA between 3.0 and Sam 17642352 555-6758 1 19 3.25 3.5.” Class Dorm ID Class Dorm Name 1123141 COMP355 1 555 Huntington 2323411 COMP355 2 Baker 17642352 MATH650 1123141 MATH650 2323411 BIOL110 16The Relational Database: Queries Student Questions (Queries): Name ID Phone Dorm Age GPA Mark 1123141 555-1234 1 19 3.21 “Which students live Kim 2323411 555-9876 2 25 3.53 in Baker Dorm?” Sam 17642352 555-6758 1 19 3.25 Class Dorm ID Class Dorm Name 1123141 COMP355 1 555 Huntington 2323411 COMP355 2 Baker 17642352 MATH650 1123141 MATH650 2323411 BIOL110 17Databases in the Context of a Software System Database Application Client Tier Tier Tier 18The Relational Model of Data: Digging In 19History 101 Codd, Edgar F. "A relational model of data for large shared data banks." Communications of the ACM 13.6 (1970): 377-387. “Future users of large data banks must be protected from having to know how the data is organized in the machine (the internal representation)…” 20History 101 ● The relational model provides a formal mathematical basis for the structure of and interaction with a relational database ○ Based on set theory and first-order predicate logic ○ The formal basis allows for robust scientific development of the model. ● The (eternal) struggle of theory vs. practice… ○ Most modern RDBMSs don’t strictly adhere to the purest mathematical formalisms in the relational model. 21A Little Set Theory Review… ● What’s a set? A set is a collection of unique objects. The things (objects) inside a set are called elements. ● What is the cardinality of a set? (denoted |S|) cardinality → the number of unique elements in the set. ? What are some examples of sets? 22A Little Set Theory Review… A = {1, 3, 5} B = {3, 4, 5, 6} ⋃ ● What is the Union of sets A and B (A B)? AUB = {1, 3, 5, 4, 6} ∩ ● What is the intersection of sets A and B (A B)? ⋂ A B = {3, 5} ● What is the set difference of A and B (A - B)? A-B = {1} 23A Little Set Theory Review… ● What is the cartesian product of two sets? The cartesian product of two sets A and B is the set of all ∈ ∈ ordered pairs (a, b) where a A and b B. A = {123, 435} B = {Chul, Kev, Sal} ● What is the cartesian product of A and B (aka A x B)? AXB = { (123, Chul), (123, Kev), (123, Sal), (435, Chul), (435, Kev), (435, Sal) } 24What’s a Relational Database? ● A Relational Database consists of ○ a collection of relations, and ○ a collection of constraints. ● A relational database is in a valid/consistent state if it satisfies all constraints (else, invalid/inconsistent state). 25Relations (Some Review) ● A relation consists of ○ its schema → a description of the structure of the relation (relation schema) ○ its state → the current data that is populated in the relation (relation instance) ● The schema of a relation includes ○ the name of the relation ○ an list of n attributes each with an associated domain (what values that attribute can take on). ● Notation: REL_NAME(Attrib1:Dom1, Attrib2:Dom2…) 26More formally… ● Let A , A , …, A be names of attributes of relation R with 1 2 n associated domains D , D , …, D , then 1 2 n R(A :D , A :D ,...A :D ) 1 1 2 2 n n is a relation schema and n, the degree of R, represents the number of attributes of R. ● Then, an instance of Relation R is a subset of the cartesian product of the domains of the attributes of R. 27Relations - Example - Assume we have the following domains: - names → {‘Jared’, ‘Sakshi’} - id_nums → {all 9 digit positive integers starting with 00} - majors → {‘CS’, ‘DS’, ‘CY’} - Defining the TA relation schema: TA(name: names, id: id_nums, major: majors) Is the following a valid instance of TA? ? { (‘Jared’, 001928374, ‘CS’) (‘Sakshi’, 001122334, ‘DS’) } 28Relations - Example - Assume we have the following domains: - names → {‘Jared’, ‘Sakshi’} - id_nums → {all 9 digit positive integers starting with 00} - majors → {‘CS’, ‘DS’, ‘CY’} - Defining the TA relation schema: TA(name: names, id: id_nums, major: majors) Is the following a valid instance of TA? ? { (‘Sakshi’, 001928374, ‘CS’) (‘Sakshi’, 001122334, ‘CY’) } 29Relations - Example - Assume we have the following domains: - names → {‘Jared’, ‘Sakshi’} - id_nums → {all 9 digit positive integers starting with 00} - majors → {‘CS’, ‘DS’, ‘CY’} - Defining the TA relation schema: TA(name: names, id: id_nums, major: majors) Is the following a valid instance of TA? ? { (‘Sakshi’, 001928374, ‘CS’) (‘Dylan’, 001122334, ‘DS’) } 30Relations - Example - Assume we have the following domains: - names → {‘Jared’, ‘Sakshi’} - id_nums → {all 9 digit positive integers starting with 00} - majors → {‘CS’, ‘DS’, ‘CY’} - Defining the TA relation schema: TA(name: names, id: id_nums, major: majors) Is the following a valid instance of TA? ? { (‘Sakshi’, 001928374, ‘CS’) (‘Jared’, 001122334) } 31Relation Instance ● A relation instance is a set of tuples (rows) from a relation at a particular point in time. ● Each tuple (row) is an ordered sequence of values, one for each attribute (possibly null) ○ usually enclosed in < and > Student Name ID Phone Dorm Age GPA Mark 1123141 555-1234 1 19 3.21 1 Kim 2323411 555-9876 2 25 3.53 Tuple Sam 17642352 555-6758 1 19 3.25 32Null Value ● Null is a special value that may exist in the domain of an attribute ● Could mean different things ○ value unknown ○ value unavailable right now ○ attribute doesn’t apply to this tuple ● Does NOT mean: ○ zero (0) ○ the empty string (‘’) ● (NULL != NULL) Comparing two values of NULL does NOT return true 33Value of an Attr in a Tuple ● Values should be atomic ○ Say NO to composite attributes (ex: address that includes city, state and zip) ○ Say NO to multi-valued attributes (ex: all email addresses for 1 person) Student Name ID Address Phone Dorm Age GPA Mark 1123141 121 Anystreet 555-1234 1 19 3.21 Boston MA 02212 555-1876 Kim 2323411 235 Huntington 555-9876 2 25 3.53 Boston MA 02215 34Super and Candidate Keys - key - a subset of attributes of a relation used to uniquely identify each tuple - A super key of a relation R is a subset of the attributes of R such that no two distinct tuples in any possible relation instance will have the same values for the subset of attributes. - may not be minimal - could contain attributes that aren’t needed for unique determination - A candidate key of relation r is a minimal super key. - A relation may have more than one candidate keys. 35Keys - Superkey Customers Some Possible Superkeys: Not Minimal (customerNumber, customerName) (customerNumber, salesRepEmployeeNumber) (customerNumber) Minimal 36Keys - Candidate Keys Customers Some Possible Superkeys: Not Candidate Keys (customerNumber, customerName) (customerNumber, salesRepEmployeeNumber) (customerNumber) Candidate Key 37The Primary Key - The primary key (PK) of relation R is chosen from the set of candidate keys - If a relation has only 1 candidate key, it becomes the PK. - If a relation has > 1 candidate key, the database designer chooses one based on business requirements - Every relation must have a PK - Entity Integrity Constraint → PK values must be unique and may NOT be null - (Usually) the PK is underlined in a relation schema or table 38Keys - Primary Key Customers Some Possible Superkeys: (customerNumber, customerName) Chosen as Primary Key (customerNumber, salesRepEmployeeNumber) If there are 2+ Candidate Keys, DB (customerNumber) Designer will choose one as the Primary key 39Foreign Keys ● Foreign Key (FK) - An attribute a in one relation R (the child relation) i C refers to/references the PK a in another relation R (parent relation) such j P that all values of a must either be NULL or contain a value from a. i j ● Self-Referential Relation → R and R are the same relation C P ● Foreign Key == Referential Integrity Constraint ● Foreign Keys are the operationalization of relationships in a relational database 40Note: in this example, Grades.sID cannot contain Foreign Key Example null values because it is part of the PK of Grades Relation. Primary Keys Foreign Key Grades Students cID sID Grade sID Name Year 332 234 B 134 Chul 1 332 332 A 234 Kev 3 535 336 C 332 Sam 2 221 134 A 336 Ashwin 2 535 332 C 221 332 A 221 336 B Parent Relation Child Relation (the one being referenced) (the one referencing another relation) 41FKs - but why??? Customers Notice: empLast, empFirst, and empEmail attributes contain duplicated/repeated data. Opens up the possibility of insert or update anomalies. So, put them in a separate table along with empNum and refer back to the new table (becomes the parent table) 42Relational Algebra 43Relational Algebra ● Relational Algebra (RA) : a procedural query language for relations that allow us to retrieve information from a relational database ○ A query is an operation or set of operations applied to one or more relation instances ○ RA is closed, meaning the result/output of each query is another relation ○ In RA, order of operations matters ● Not a full-fledged (turing complete) programming language 44Quick Aside: Predicate Functions - Predicate functions - functions that return true or false. - We will use predicate functions (or just “predicates”) to determine if tuples in a relation instance should be returned by a query or not. - in the form attr <op> attr OR attr <op> <constant> - <op> can be any standard relational operator (=, !=, <, >, <=, etc) - predicates can be composed with ^ (and), v (or), ㄱ (not). Employees Examples: empID firstName - empID = 143 - empID > 400 333 Bob - firstName = ‘Bob’ ^ empID = 333 143 Sam 45The First 8 Basic Operations of RA 1. Select σ (Tuple Filtering) 2. Project π (Attribute Filtering) 3. Rename ρ ✕ 4. Cartesian Product 5. Join ⨝ ⋂ 6. Intersection 7. Set-difference – 8. Union U 46 Precedence Precedence Highest Lowest You can always use ( ) to change the order of operations. Often times, ( ) make things more clear.Relational Algebra: Select Operator ● Select - return a relation containing tuples from relation R that satisfy predicate pred. Notation: ● Think of it as a horizontal subset (subset of tuples/rows) of a relation instance 47Relational Algebra: Select Operator Enrollments Dept Class Enrollment Result: CS 3200 40 Enrollments Dept Class Enrollment CS 2500 643 CS 2500 643 CS 1800 680 CS 1800 680 DS 2000 412 48Relational Algebra: Select Operator Enrollments Result: Enrollments Dept Class Taught_by Dept Class Taught_by CS 3200 CS CS 3200 CS CS 2500 CS CS 1800 Math DS 2000 Math 49Relational Algebra: Project Operator Project - returns a relation with a subset of attributes (A … A ) 1 k from R. Notation: Duplicate tuples will be removed from the resulting relation (because relations are sets). 50Relational Algebra: Project Operator Result: Enrollments Enrollments Dept Class Dept Class Enrollment CS 3200 CS 3200 40 CS 2500 CS 1800 CS 2500 643 DS 2000 CS 1800 680 DS 2000 412 Result: Enrollments Dept CS DS 51Relational Algebra: Cartesian Product Note: we can always use Relation.Attribute notation to Same operation from set theory. resolve naming collisions. Relations can’t have two attributes R with the same name Attr_1 Attr_2 R.Attr_1 R.Attr_2 S.Attr_1 S.Attr_3 123 abc 123 abc 123 CS 456 def 123 abc 789 DS 123 abc 111 Cyber 456 def 123 CS S 456 def 789 DS Attr_1 Attr_3 456 def 111 Cyber 123 CS 789 DS 111 Cyber 52Union, Intersection & Difference ● Essentially the same as what we know from set theory. ● One small difference: relations must be schema compatible ○ same number of attributes ○ attributes’ domains must be compatible 53More Complex RA Expressions - Simple RA expression can be composed into more complex expressions - Remember: output of each RA operation is another relation 54Relational Algebra: Temporary Relation Names For more complex RA queries, you can have: ● one long query expression ● an ordered list of smaller expressions, the result of each is given a temporary name with the ← operator Example: ● TEMP_NAME ← TEMP_NAME can then be used as a relation in subsequent steps of the same query. ● Be careful about attribute naming collisions 55Relational Algebra: Rename Operator Rename Operator (rho) – Allows us to “rename” a relation, the attributes of a relation, or both. - If only name is provided, the relation is being renamed (all attributes retain their original name.) - List of attributes in parentheses means renaming attributes, but not relation (assume attributes originally (employeeID, lastName, firstName) - Rename both. 56Developing Relational Algebra Expressions 57Writing RA Queries - Sometimes we need to evaluate an RA query against a database instance - Result is usually another relation instance/set of tuples/table - Other times we need to convert the narrative form of a query into a RA query - Example: “Provide a list of all info from the Employee relation where the empID is less than 400.” - Answer: 58Grades Writing RA Queries C_ID S_ID Grade 332 234 B Students 332 332 A Stu_ID Name Year 535 336 C 134 Chul 1 221 134 A 234 Kev 3 535 332 C 332 Sam 2 221 332 A 336 Ashwin 2 221 336 B Courses Cou_ID Dept Number Prof 332 CS 3345 Lawrimore Next few examples use 221 CS 2341 Fontenot this database schema. 535 MATH 2339 Norris 59Grades Writing RA Queries C_ID S_ID Grade 332 234 B Students 332 332 A Stu_ID Name Year 535 336 C 134 Chul 1 221 134 A 234 Kev 3 535 332 C 332 Sam 2 221 332 A 336 Ashwin 2 221 336 B Courses Cou_ID Dept Number Prof Write a RA query that returns the names of 332 CS 3345 Lawrimore all students. 221 CS 2341 Fontenot 535 MATH 2339 Norris 60Grades Writing RA Queries C_ID S_ID Grade 332 234 B Students 332 332 A Stu_ID Name Year 535 336 C 134 Chul 1 221 134 A 234 Kev 3 535 332 C 332 Sam 2 221 332 A 336 Ashwin 2 221 336 B Courses Cou_ID Dept Number Prof Provide a list of all course numbers taught 332 CS 3345 Lawrimore by the CS Department. 221 CS 2341 Fontenot 535 MATH 2339 Norris 61Grades Writing RA Queries C_ID S_ID Grade 332 234 B Students 332 332 A Stu_ID Name Year 535 336 C 134 Chul 1 221 134 A 234 Kev 3 535 332 C 332 Sam 2 221 332 A 336 Ashwin 2 221 336 B Courses Cou_ID Dept Number Prof List all 2nd year student names. 332 CS 3345 Lawrimore 221 CS 2341 Fontenot 535 MATH 2339 Norris 62Grades Writing RA Queries C_ID S_ID Grade 332 234 B Students 332 332 A Stu_ID Name Year 535 336 C 134 Chul 1 221 134 A 234 Kev 3 535 332 C 332 Sam 2 221 332 A 336 Ashwin 2 221 336 B Courses Cou_ID Dept Number Prof What course or courses (dept and number) 332 CS 3345 Lawrimore are taught by Professor Norris? 221 CS 2341 Fontenot 535 MATH 2339 Norris 63Grades Writing RA Queries C_ID S_ID Grade 332 234 B Students 332 332 A Stu_ID Name Year 535 336 C 134 Chul 1 221 134 A 234 Kev 3 535 332 C 332 Sam 2 221 332 A 336 Ashwin 2 221 336 B Courses Cou_ID Dept Number Prof List the letter grades that Sam has earned 332 CS 3345 Lawrimore (don’t need to include course info). 221 CS 2341 Fontenot 535 MATH 2339 Norris or 64Joining Data from Two Relations 65Relational Algebra: The Join Operator ● Join - allows us to combine data from two relations. ○ Subset of the cartesian product of the two argument relations based on explicit or implicit join predicate. ● 2 Versions: ○ Natural Join - Join relations on attributes with the same name ○ Theta Join (or condition join or simply Join) - Join relations with explicitly supplied join predicate 66Natural Join ● Given: A(R, S, T, U, V) and B(S, V, W, X) ● Query: ● Notice: A and B both have attributes named S & V. ● Result: ○ Schema of resulting relation is where attr(R) returns a set containing the attributes of R - so, attributes used in the implicit join condition are not duplicated in the result ○ contains any tuple from A x B where values for attributes S and V are equal ○ If A & B have no common attribute names, result is A X B. 67Grades Students Example cID sID Grade sID Name Year 332 234 B 134 Chul 1 332 332 A 234 Kev 3 535 336 C 332 Sam 2 336 Ashwin 2 221 134 A 535 332 C 221 332 A Query: 221 336 B Result: cID sID Grade Name Year 332 234 B Kev 3 332 332 A Sam 2 535 336 C Ashwin 2 221 134 A Chul 1 535 332 C Sam 2 221 332 A Sam 2 221 336 B Ashwin 2 68theta-Join (or Join… or Condition(al) Join) ● Operator has an explicit join predicate (condition) (doesn’t rely upon attribute names) ● Result is a subset of the cartesian product where provided predicate holds true ● Assume: S(sID, name) and G(stu-ID, course, semester, grade) ● Query: ● Result: ○ Relation with schema (sID, name, stu-ID, course, semester, grade) ○ all tuples where S.sID = G.stu-ID ● Note: join condition can use other operators besides =. 69theta-Join (or Join… or Condition(al) Join) S A B 1 Cat 2 Dog A B C D 3 Bird 1 Cat 1 Meow T 3 Bird 3 Chirp C D 1 Meow 3 Chirp 70New: Entity Relationship Diagram Northwind Traders Data Model - sample database model that has been around for years; originally developed by Microsoft - represents data model for fake Northwind Traders company, an importer/exporter of specialty foods 71New: ER Diagram Relation Name Attributes Relationships Primary Key Attributes 72Relations in Northwind ● Suppliers: Suppliers and vendors of Northwind ● Customers: Customers who buy products from Northwind ● Employees: Employee details of Northwind traders ● Products: Product information ● Shippers: The details of the shippers who ship the products from the traders to the end-customers ● Orders and Order_Details: Sales Order transactions taking place between the customers & the company ● Categories: The categories a product can fall into 73Practice Time! For each of the following, compose a relational algebra query that satisfies the query prompt. 74!emiT yreuQ 1. For each supplier, provide its name, contact person, and phone number. 75!emiT yreuQ 2. Which products are supplied by FoodsRUs? Please include the product name and unit price. 76!emiT yreuQ 3. Provide a list of all product names ordered by World Market (a customer’s name). 77!emiT yreuQ 4. Which customers has employee Sam Johnson worked with? Provide the complete customer information. (CustomerID) 78Further Reading ● Harrington Ch5 (OReilly) ● Foundations of Computer Science - Ch 8 - The Relational Model 79